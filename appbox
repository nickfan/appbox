#!/usr/bin/env php
<?php
/**
 * Description
 *
 * @project appbox
 * @package
 * @author nickfan<nickfan81@gmail.com>
 * @link http://www.axiong.me
 * @version $Id$
 * @lastmodified: 2014-07-03 10:09
 *
 */

use Ulrichsg\Getopt\Getopt;
use Ulrichsg\Getopt\Option;
use Nickfan\AppBox\Support\Facades\AppBox;

!defined('PHP_BINARY') && define('PHP_BINARY', '/usr/bin/env php');
require_once __DIR__ . '/bootstrap/app_init.php';
$getopt = new Getopt(array(
    new Option('v', 'verbose'),
    new Option(null, 'help'),
    new Option(null, 'version'),
    (new Option('h', 'host', Getopt::OPTIONAL_ARGUMENT))
        ->setDescription('run appbox in serve mode @ host')
        ->setDefaultValue('localhost'),
    (new Option('p', 'port', Getopt::OPTIONAL_ARGUMENT))
        ->setDescription('run appbox in serve mode @ port')
        ->setDefaultValue('8000')
        ->setValidation(function($value) {
            return is_numeric($value);
        }),
    (new Option(null, 'serve', Getopt::OPTIONAL_ARGUMENT))
        ->setDescription('run appbox in serve mode'),
    (new Option(null, 'shell', Getopt::OPTIONAL_ARGUMENT))
        ->setDescription('run appbox in interactive mode'),
//    (new Option('r', 'rcbasepath', Getopt::OPTIONAL_ARGUMENT))
//    ->setDescription('route config files base path contain dsn and route config files')
//    ->setDefaultValue('./app/boxdata/etc/local')
//    ->setValidation(function($value) {
//            $realpath = realpath($value);
//            if(file_exists($realpath) && is_dir($realpath)){
//                if(file_exists($realpath.'/dsn')
//                    && is_dir($realpath.'/dsn')
//                    && file_exists($realpath.'/route')
//                    && is_dir($realpath.'/route')
//                ){
//                    return true;
//                }
//            }
//            return false;
//        }),
//    (new Option('c', 'confpath', Getopt::OPTIONAL_ARGUMENT))
//    ->setDescription('repository config files base path contain application config files')
//    ->setDefaultValue('./app/boxdata/conf')
//    ->setValidation(function($value) {
//            $realpath = realpath($value);
//            if(file_exists($realpath) && is_dir($realpath)){
//                return true;
//            }
//            return false;
//        }),
//    (new Option('a', 'apppath', Getopt::OPTIONAL_ARGUMENT))
//    ->setDescription('application programs source files base path')
//    ->setDefaultValue('./app')
//    ->setValidation(function($value) {
//            $realpath = realpath($value);
//            if(file_exists($realpath) && is_dir($realpath)){
//                return true;
//            }
//            return false;
//        }),
));

try {
    $getopt->parse();
    $operands = $getopt->getOperands();

    if ($getopt['version'] || (count($operands)== 1 && $operands[0]=='version')) {
        echo \Nickfan\AppBox\Common\BoxConstants::VERSION.PHP_EOL;
        exit(0);
    }

    !isset($app) && $app = AppBox::inst();

    if($getopt['shell'] || (count($operands)== 1 && $operands[0]=='shell')){
        try{
            $boris = new \Boris\Boris('appbox> ');
            $boris->setLocal(array('app' => $app));
            $boris->start();
        }catch (\Exception $ex){
            echo $ex->getMessage()."\n";
        }
    }elseif($getopt['serve'] || (count($operands)== 1 && $operands[0]=='serve')){
        chdir($app['path.base']);
        $public = $app['path.public'];
        passthru('"'.PHP_BINARY.'"'." -S {$getopt['host']}:{$getopt['port']} -t \"{$public}\" server.php");
    }elseif($getopt['help'] || (count($operands)== 1 && $operands[0]=='help')) {
        echo $getopt->getHelpText();
        exit(0);
    }else{
        echo $getopt->getHelpText();
        exit(0);
    }
} catch (UnexpectedValueException $e) {
    echo "Error: ".$e->getMessage()."\n";
    echo $getopt->getHelpText();
    exit(1);
}
